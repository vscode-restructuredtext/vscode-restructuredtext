{
  "name": "restructuredtext",
  "displayName": "%displayName%",
  "description": "%description%",
  "version": "190.1.4",
  "publisher": "lextudio",
  "engines": {
    "vscode": "^1.63.0"
  },
  "dependencies": {
    "@jedithepro/system-info": "^3.0.0",
    "async-lock": "^1.3.1",
    "inversify": "^6.0.1",
    "lodash.throttle": "^4.1.1",
    "meaw": "^4.1.0",
    "mime": "^2.4.6",
    "node-fetch": "^2.0.0",
    "open": "^7.3.0",
    "reflect-metadata": "^0.1.13",
    "rollbar": "^2.25.0",
    "semver": "^7.3.7",
    "tslib": "^2.4.0",
    "vscode-languageclient": "^6.1.3",
    "vscode-nls": "^4.0.0"
  },
  "devDependencies": {
    "@studio/changes": "^2.2.0",
    "@types/lodash.throttle": "^4.1.4",
    "@types/mocha": "^7.0.2",
    "@types/node": "^13.9.2",
    "@types/vscode": "^1.63.0",
    "@vscode/test-electron": "^2.1.3",
    "eslint": "^8.15.0",
    "mocha": "^9.2.2",
    "ts-loader": "^9.2.8",
    "ts-node": "^10.7.0",
    "typescript": "^4.7.2",
    "vsce": "^2.8.0",
    "webpack": "^5.76.0",
    "webpack-cli": "^4.9.2"
  },
  "featureFlags": {
    "usingNewInterpreterStorage": true
  },
  "license": "SEE LICENSE IN LICENSE.txt",
  "homepage": "https://www.restructuredtext.net",
  "categories": [
    "Programming Languages",
    "Snippets",
    "Linters"
  ],
  "icon": "images/Document_icon.png",
  "galleryBanner": {
    "color": "#ACD1EC",
    "theme": "light"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/vscode-restructuredtext/vscode-restructuredtext.git"
  },
  "bugs": "https://github.com/vscode-restructuredtext/vscode-restructuredtext/issues",
  "main": "./out/extension",
  "activationEvents": [
    "workspaceContains:**/*.rst",
    "onLanguage:restructuredtext",
    "onCommand:restructuredtext.preview.toggleLock",
    "onCommand:restructuredtext.preview.refresh",
    "onCommand:restructuredtext.showPreview",
    "onCommand:restructuredtext.showPreviewToSide",
    "onCommand:restructuredtext.showLockedPreviewToSide",
    "onCommand:restructuredtext.showSource",
    "onCommand:restructuredtext.showPreviewSecuritySelector",
    "onWebviewPanel:restructuredtext.preview",
    "onCommand:restructuredtext.features.underline.underline",
    "onCommand:resttext.table.createGrid",
    "onCommand:resttext.table.dataToTable",
    "onCommand:resttext.key.enter",
    "onCommand:resttext.key.shift.enter",
    "onCommand:resttext.key.alt.enter",
    "onCommand:resttext.key.tab",
    "onCommand:resttext.key.shift.tab"
  ],
  "contributes": {
    "languages": [
      {
        "id": "restructuredtext",
        "aliases": [
          "reStructuredText",
          "restructuredtext",
          "ReStructured Text",
          "reStructured Text",
          "RST",
          "ReST",
          "reST"
        ],
        "extensions": [
          ".rst",
          ".rest"
        ]
      }
    ],
    "snippets": [
      {
        "language": "restructuredtext",
        "path": "./snippets/snippets.json"
      }
    ],
    "keybindings": [
      {
        "command": "esbonio.insert.inlineLink",
        "key": "alt+l",
        "when": "editorTextFocus && editorLangId == restructuredtext"
      },
      {
        "command": "esbonio.insert.link",
        "key": "alt+shift+l",
        "when": "editorTextFocus && editorLangId == restructuredtext"
      },
      {
        "command": "restructuredtext.showPreview",
        "key": "shift+ctrl+r",
        "mac": "shift+cmd+r",
        "when": "editorLangId == restructuredtext"
      },
      {
        "command": "restructuredtext.showPreviewToSide",
        "key": "ctrl+k ctrl+r",
        "mac": "cmd+k cmd+r",
        "when": "editorLangId == restructuredtext"
      },
      {
        "command": "restructuredtext.features.underline.underline",
        "key": "ctrl+k ctrl+=",
        "mac": "cmd+k cmd+=",
        "when": "editorLangId == restructuredtext"
      },
      {
        "command": "restructuredtext.features.underline.underlineReverse",
        "key": "ctrl+k ctrl+-",
        "mac": "cmd+k cmd+-",
        "when": "editorLangId == restructuredtext"
      },
      {
        "command": "restructuredtext.editor.listEditing.onEnterKey",
        "key": "enter",
        "when": "editorTextFocus && !editorReadonly && editorLangId == restructuredtext && !suggestWidgetVisible && vim.mode != 'Normal' && vim.mode != 'Visual' && vim.mode != 'VisualBlock' && vim.mode != 'VisualLine' && vim.mode != 'SearchInProgressMode' && vim.mode != 'CommandlineInProgress' && vim.mode != 'Replace' && vim.mode != 'EasyMotionMode' && vim.mode != 'EasyMotionInputMode' && vim.mode != 'SurroundInputMode'"
      },
      {
        "command": "restructuredtext.editor.listEditing.onCtrlEnterKey",
        "key": "ctrl+enter",
        "mac": "cmd+enter",
        "when": "editorTextFocus && !editorReadonly && editorLangId == restructuredtext && !suggestWidgetVisible"
      },
      {
        "command": "restructuredtext.editor.listEditing.onShiftEnterKey",
        "key": "shift+enter",
        "when": "editorTextFocus && !editorReadonly && editorLangId == restructuredtext && !suggestWidgetVisible"
      },
      {
        "command": "restructuredtext.editor.listEditing.onTabKey",
        "key": "tab",
        "when": "editorTextFocus && !editorReadonly && editorLangId == restructuredtext && !suggestWidgetVisible && !editorTabMovesFocus && !inSnippetMode && !hasSnippetCompletions && !hasOtherSuggestions && !inlineSuggestionVisible"
      },
      {
        "command": "restructuredtext.editor.listEditing.onShiftTabKey",
        "key": "shift+tab",
        "when": "editorTextFocus && !editorReadonly && editorLangId == restructuredtext && !suggestWidgetVisible && !editorTabMovesFocus && !inSnippetMode && !hasSnippetCompletions && !hasOtherSuggestions"
      },
      {
        "command": "restructuredtext.editor.listEditing.onBackspaceKey",
        "key": "backspace",
        "when": "editorTextFocus && !editorReadonly && editorLangId == restructuredtext && !suggestWidgetVisible && vim.mode != 'Normal' && vim.mode != 'Visual' && vim.mode != 'VisualBlock' && vim.mode != 'VisualLine' && vim.mode != 'SearchInProgressMode' && vim.mode != 'CommandlineInProgress' && vim.mode != 'Replace' && vim.mode != 'EasyMotionMode' && vim.mode != 'EasyMotionInputMode' && vim.mode != 'SurroundInputMode'"
      },
      {
        "command": "restructuredtext.editor.listEditing.onMoveLineUp",
        "key": "alt+up",
        "when": "editorTextFocus && !editorReadonly && editorLangId == restructuredtext && !suggestWidgetVisible"
      },
      {
        "command": "restructuredtext.editor.listEditing.onMoveLineDown",
        "key": "alt+down",
        "when": "editorTextFocus && !editorReadonly && editorLangId == restructuredtext && !suggestWidgetVisible"
      },
      {
        "command": "restructuredtext.editor.listEditing.onCopyLineUp",
        "win": "shift+alt+up",
        "mac": "shift+alt+up",
        "when": "editorTextFocus && !editorReadonly && editorLangId == restructuredtext && !suggestWidgetVisible"
      },
      {
        "command": "restructuredtext.editor.listEditing.onCopyLineDown",
        "win": "shift+alt+down",
        "mac": "shift+alt+down",
        "when": "editorTextFocus && !editorReadonly && editorLangId == restructuredtext && !suggestWidgetVisible"
      },
      {
        "command": "restructuredtext.editor.listEditing.onIndentLines",
        "key": "ctrl+]",
        "mac": "cmd+]",
        "when": "editorTextFocus && editorLangId == restructuredtext && !suggestWidgetVisible"
      },
      {
        "command": "restructuredtext.editor.listEditing.onOutdentLines",
        "key": "ctrl+[",
        "mac": "cmd+[",
        "when": "editorTextFocus && editorLangId == restructuredtext && !suggestWidgetVisible"
      },
      {
        "command": "resttext.table.dataToTable",
        "key": "alt+t",
        "when": "editorTextFocus && !editorHasMultipleSelections && editorHasSelection && editorLangId==restructuredtext"
      },
      {
        "command": "resttext.key.enter",
        "key": "enter",
        "when": "resttext.enter.enabled && editorTextFocus && !suggestWidgetVisible && editorLangId==restructuredtext"
      },
      {
        "command": "resttext.key.shift.enter",
        "key": "shift+enter",
        "when": "resttext.shift.enter.enabled && editorTextFocus && !suggestWidgetVisible && editorLangId==restructuredtext"
      },
      {
        "command": "resttext.key.alt.enter",
        "key": "alt+enter",
        "when": "resttext.alt.enter.enabled && editorTextFocus && !suggestWidgetVisible && editorLangId==restructuredtext"
      },
      {
        "command": "resttext.key.tab",
        "key": "tab",
        "when": "resttext.tab.enabled && editorTextFocus && !inSnippetMode && !suggestWidgetVisible && editorLangId==restructuredtext && !inlineSuggestionVisible"
      },
      {
        "command": "resttext.key.shift.tab",
        "key": "shift+tab",
        "when": "resttext.shift.tab.enabled && editorTextFocus && !inSnippetMode && !suggestWidgetVisible && editorLangId==restructuredtext"
      }
    ],
    "commands": [
      {
        "command": "esbonio.insert.link",
        "title": "Insert Link",
        "category": "Esbonio"
      },
      {
        "command": "esbonio.insert.inlineLink",
        "title": "Insert Inline Link",
        "category": "Esbonio"
      },
      {
        "command": "restructuredtext.showPreview",
        "title": "%restructuredtext.preview.title%",
        "category": "reStructuredText",
        "icon": {
          "light": "./media/Preview.svg",
          "dark": "./media/Preview_inverse.svg"
        }
      },
      {
        "command": "restructuredtext.showPreviewToSide",
        "title": "%restructuredtext.previewSide.title%",
        "category": "reStructuredText",
        "icon": {
          "light": "./media/PreviewOnRightPane_16x.svg",
          "dark": "./media/PreviewOnRightPane_16x_dark.svg"
        }
      },
      {
        "command": "restructuredtext.showLockedPreviewToSide",
        "title": "%restructuredtext.showLockedPreviewToSide.title%",
        "category": "reStructuredText",
        "icon": {
          "light": "./media/PreviewOnRightPane_16x.svg",
          "dark": "./media/PreviewOnRightPane_16x_dark.svg"
        }
      },
      {
        "command": "restructuredtext.showSource",
        "title": "%restructuredtext.showSource.title%",
        "category": "reStructuredText",
        "icon": {
          "light": "./media/ViewSource.svg",
          "dark": "./media/ViewSource_inverse.svg"
        }
      },
      {
        "command": "restructuredtext.showPreviewSecuritySelector",
        "title": "%restructuredtext.showPreviewSecuritySelector.title%",
        "category": "reStructuredText"
      },
      {
        "command": "restructuredtext.preview.refresh",
        "title": "%restructuredtext.preview.refresh.title%",
        "category": "reStructuredText"
      },
      {
        "command": "restructuredtext.preview.toggleLock",
        "title": "%restructuredtext.preview.toggleLock.title%",
        "category": "reStructuredText"
      },
      {
        "command": "restructuredtext.workspace.isTrusted.toggle",
        "title": "reStructuredText: Toggle Workspace Trust Flag",
        "description": "Toggle the workspace trust flag. Workspace settings that determine tool locations are disabled by default in untrusted workspaces."
      },
      {
        "category": "reStructuredText",
        "command": "resttext.table.createGrid",
        "title": "%resttext.table.createGrid.title%",
        "when": "resttext.createGrid.enabled && editorTextFocus && !editorHasMultipleSelections && editorHasSelection && editorLangId==restructuredtext"
      },
      {
        "category": "reStructuredText",
        "command": "resttext.table.dataToTable",
        "title": "%resttext.table.dataToTable.title%",
        "when": "editorTextFocus && !editorHasMultipleSelections && editorHasSelection && editorLangId==restructuredtext"
      },
      {
        "category": "reStructuredText",
        "command": "resttext.key.enter",
        "title": "%resttext.key.enter.title%",
        "when": "resttext.enter.enabled && editorTextFocus && !suggestWidgetVisible && editorLangId==restructuredtext"
      },
      {
        "category": "reStructuredText",
        "command": "resttext.key.shift.enter",
        "title": "%resttext.key.shift.enter.title%",
        "when": "resttext.shift.enter.enabled && editorTextFocus && !suggestWidgetVisible && editorLangId==restructuredtext"
      },
      {
        "category": "reStructuredText",
        "command": "resttext.key.alt.enter",
        "title": "%resttext.key.alt.enter.title%",
        "when": "resttext.alt.enter.enabled && editorTextFocus && !suggestWidgetVisible && editorLangId==restructuredtext"
      },
      {
        "category": "reStructuredText",
        "command": "resttext.key.tab",
        "title": "%resttext.key.tab.title%",
        "when": "resttext.tab.enabled && editorTextFocus && !inSnippetMode && !suggestWidgetVisible && editorLangId==restructuredtext"
      },
      {
        "category": "reStructuredText",
        "command": "resttext.key.shift.tab",
        "title": "%resttext.key.shift.tab.title%",
        "when": "resttext.shift.tab.enabled && editorTextFocus && !inSnippetMode && !suggestWidgetVisible && editorLangId==restructuredtext"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "group": "1_modification",
          "command": "resttext.table.createGrid",
          "when": "resttext.createGrid.enabled && editorTextFocus && !editorHasMultipleSelections && editorHasSelection && editorLangId==restructuredtext"
        },
        {
          "group": "1_modification",
          "command": "resttext.table.dataToTable",
          "when": "editorTextFocus && !editorHasMultipleSelections && editorHasSelection && editorLangId==restructuredtext"
        }
      ],
      "editor/title": [
        {
          "when": "resourceLangId == restructuredtext",
          "command": "restructuredtext.showPreviewToSide",
          "alt": "restructuredtext.showPreview",
          "group": "navigation"
        },
        {
          "when": "restructuredtextPreviewFocus",
          "command": "restructuredtext.showSource",
          "group": "navigation"
        },
        {
          "command": "restructuredtext.preview.refresh",
          "when": "restructuredtextPreviewFocus",
          "group": "restructuredtext"
        },
        {
          "command": "restructuredtext.preview.toggleLock",
          "when": "restructuredtextPreviewFocus",
          "group": "restructuredtext"
        },
        {
          "command": "restructuredtext.showPreviewSecuritySelector",
          "when": "restructuredtextPreviewFocus",
          "group": "restructuredtext"
        }
      ],
      "explorer/context": [
        {
          "when": "resourceLangId == restructuredtext",
          "command": "restructuredtext.showPreview",
          "group": "navigation"
        }
      ],
      "commandPalette": [
        {
          "command": "restructuredtext.showPreview",
          "when": "editorLangId == restructuredtext",
          "group": "navigation"
        },
        {
          "command": "restructuredtext.showPreviewToSide",
          "when": "editorLangId == restructuredtext",
          "group": "navigation"
        },
        {
          "command": "restructuredtext.showLockedPreviewToSide",
          "when": "editorLangId == restructuredtext",
          "group": "navigation"
        },
        {
          "command": "restructuredtext.showSource",
          "when": "restructuredtextPreviewFocus",
          "group": "navigation"
        },
        {
          "command": "restructuredtext.showPreviewSecuritySelector",
          "when": "editorLangId == restructuredtext"
        },
        {
          "command": "restructuredtext.showPreviewSecuritySelector",
          "when": "restructuredtextPreviewFocus"
        },
        {
          "command": "restructuredtext.preview.toggleLock",
          "when": "restructuredtextPreviewFocus"
        },
        {
          "command": "resttext.table.createGrid",
          "when": "never"
        },
        {
          "command": "resttext.table.dataToTable",
          "when": "!editorHasMultipleSelections && editorHasSelection && editorLangId==restructuredtext"
        },
        {
          "command": "resttext.key.enter",
          "when": "never"
        },
        {
          "command": "resttext.key.shift.enter",
          "when": "never"
        },
        {
          "command": "resttext.key.alt.enter",
          "when": "never"
        },
        {
          "command": "resttext.key.tab",
          "when": "never"
        },
        {
          "command": "resttext.key.shift.tab",
          "when": "never"
        }
      ]
    },
    "configuration": [
      {
        "title": "reStructuredText",
        "properties": {
          "restructuredtext.conflictingExtensions": {
            "type": "array",
            "default": [
              "tht13.rst-vscode",
              "TatsuyaNakamori.resttext",
              "swyddfa.esbonio"
            ],
            "description": "Extensions that might lead to conflicts.",
            "scope": "application"
          },
          "restructuredtext.editor.sectionEditor.adornments": {
            "type": "string",
            "default": "#*=-^\"'`:.~_+",
            "description": "A ordered list of adornments.",
            "scope": "resource"
          },
          "restructuredtext.editor.tableEditor.disabled": {
            "type": "boolean",
            "default": false,
            "description": "Flag to disable Table Editor feature.",
            "scope": "resource"
          },
          "restructuredtext.editor.tableEditor.reformat.disabled": {
            "type": "boolean",
            "default": false,
            "description": "Flag to disable reformat of Table Editor feature.",
            "scope": "resource"
          },
          "restructuredtext.pythonRecommendation.disabled": {
            "type": "boolean",
            "default": false,
            "description": "Flag to disable recommendation on Microsoft Python extension.",
            "scope": "resource"
          },
          "restructuredtext.syntaxHighlighting.disabled": {
            "type": "boolean",
            "default": false,
            "description": "Flag to disable syntax highlighting.",
            "scope": "resource"
          },
          "restructuredtext.styles": {
            "type": "array",
            "default": [],
            "description": "%restructuredtext.styles.dec%",
            "scope": "resource"
          },
          "restructuredtext.preview.name": {
            "type": "string",
            "enum": [
              "sphinx",
              "docutils"
            ],
            "default": "sphinx",
            "scope": "resource"
          },
          "restructuredtext.preview.sphinx.disabled": {
            "type": "boolean",
            "default": false,
            "description": "Flag to disable sphinx based preview if critical issues happen.",
            "scope": "resource"
          },
          "restructuredtext.preview.docutils.disabled": {
            "type": "boolean",
            "default": false,
            "description": "Flag to disable docutils based preview if critical issues happen.",
            "scope": "resource"
          },
          "restructuredtext.preview.fontFamily": {
            "type": "string",
            "default": "-apple-system, BlinkMacSystemFont, 'Segoe WPC', 'Segoe UI', 'HelveticaNeue-Light', 'Ubuntu', 'Droid Sans', sans-serif",
            "description": "%restructuredtext.preview.fontFamily.desc%",
            "scope": "resource"
          },
          "restructuredtext.preview.fontSize": {
            "type": "number",
            "default": 14,
            "description": "%restructuredtext.preview.fontSize.desc%",
            "scope": "resource"
          },
          "restructuredtext.preview.lineHeight": {
            "type": "number",
            "default": 1.6,
            "description": "%restructuredtext.preview.lineHeight.desc%",
            "scope": "resource"
          },
          "restructuredtext.preview.scrollPreviewWithEditor": {
            "type": "boolean",
            "default": true,
            "description": "%restructuredtext.preview.scrollPreviewWithEditor.desc%",
            "scope": "resource"
          },
          "restructuredtext.preview.markEditorSelection": {
            "type": "boolean",
            "default": true,
            "description": "%restructuredtext.preview.markEditorSelection.desc%",
            "scope": "resource"
          },
          "restructuredtext.preview.scrollEditorWithPreview": {
            "type": "boolean",
            "default": true,
            "description": "%restructuredtext.preview.scrollEditorWithPreview.desc%",
            "scope": "resource"
          },
          "restructuredtext.preview.doubleClickToSwitchToEditor": {
            "type": "boolean",
            "default": true,
            "description": "%restructuredtext.preview.doubleClickToSwitchToEditor.desc%",
            "scope": "resource"
          },
          "restructuredtext.trace": {
            "type": "string",
            "enum": [
              "off",
              "verbose"
            ],
            "default": "verbose",
            "description": "%restructuredtext.trace.desc%",
            "scope": "window"
          },
          "restructuredtext.builtDocumentationPath": {
            "type": "string",
            "default": null,
            "description": "Sphinx's HTML output folder. Defaults to 'restructuredtext.confPath'/_build/html This is an absolute path, and you can use ${workspaceFolder} to represent the workspace root folder.",
            "scope": "resource",
            "deprecationMessage": "This setting is obsolete. Please refer to https://docs.restructuredtext.net/articles/configuration.html#live-preview."
          },
          "restructuredtext.sourcePath": {
            "type": "string",
            "default": null,
            "description": "Sphinx project folder containing the source files. Set this option if it is different from 'restructuredtext.confPath'. This is an absolute path, and you can use ${workspaceFolder} to represent the workspace root folder.",
            "scope": "resource",
            "deprecationMessage": "This setting is obsolete. Please refer to https://docs.restructuredtext.net/articles/configuration.html#live-preview."
          },
          "restructuredtext.confPath": {
            "type": "string",
            "default": null,
            "description": "Sphinx's configuration folder containing conf.py. Set this option if the path is not found automatically. This is an absolute path, and you can use ${workspaceFolder} to represent the workspace root folder.",
            "scope": "resource",
            "deprecationMessage": "This setting is obsolete. Please refer to https://docs.restructuredtext.net/articles/configuration.html#live-preview."
          },
          "restructuredtext.docutilsWriter": {
            "type": "string",
            "default": "html",
            "description": "The docutils writer that will generate the output.",
            "scope": "resource"
          },
          "restructuredtext.docutilsWriterPart": {
            "type": "string",
            "default": "html_body",
            "description": "The output part of the docutils writer.",
            "scope": "resource"
          },
          "restructuredtext.linter.disabled": {
            "type": "boolean",
            "default": false,
            "description": "Flag to disable linter if critical issues happen.",
            "scope": "resource",
            "deprecationMessage": "This setting is obsolete. Please refer to https://docs.restructuredtext.net/articles/configuration.html#linter."
          },
          "restructuredtext.linter.name": {
            "type": "string",
            "enum": [
              "doc8",
              "rstcheck"
            ],
            "default": "rstcheck",
            "deprecationMessage": "This setting is obsolete. Please refer to https://docs.restructuredtext.net/articles/configuration.html#linter."
          },
          "restructuredtext.linter.executablePath": {
            "type": "string",
            "default": null,
            "description": "Points to the doc8 or rstcheck executable.",
            "scope": "resource",
            "deprecationMessage": "This setting is obsolete. Please refer to https://docs.restructuredtext.net/articles/configuration.html#linter."
          },
          "restructuredtext.linter.disabledLinters": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "doc8",
                "rstcheck",
                "rst-lint"
              ]
            },
            "default": [],
            "description": "Flag to disable linters if critical issues happen.",
            "scope": "resource"
          },
          "restructuredtext.linter.doc8.executablePath": {
            "type": "string",
            "default": null,
            "description": "Points to the doc8 executable.",
            "scope": "resource"
          },
          "restructuredtext.linter.doc8.extraArgs": {
            "type": "array",
            "default": [],
            "description": "Extra arguments to doc8.",
            "scope": "resource"
          },
          "restructuredtext.linter.rstcheck.executablePath": {
            "type": "string",
            "default": null,
            "description": "Points to the doc8 executable.",
            "scope": "resource"
          },
          "restructuredtext.linter.rstcheck.extraArgs": {
            "type": "array",
            "default": [],
            "description": "Extra arguments to doc8.",
            "scope": "resource"
          },
          "restructuredtext.linter.rst-lint.executablePath": {
            "type": "string",
            "default": null,
            "description": "Points to the doc8 executable.",
            "scope": "resource"
          },
          "restructuredtext.linter.rst-lint.extraArgs": {
            "type": "array",
            "default": [],
            "description": "Extra arguments to doc8.",
            "scope": "resource"
          },
          "restructuredtext.linter.run": {
            "type": "string",
            "enum": [
              "onSave",
              "onType",
              "off"
            ],
            "default": "onType",
            "description": "Whether the linter is run on save or on type or disabled.",
            "scope": "resource"
          },
          "restructuredtext.linter.extraArgs": {
            "type": "array",
            "default": [],
            "description": "Extra arguments to doc8 or rst check.",
            "scope": "resource",
            "deprecationMessage": "This setting is obsolete. Please refer to https://docs.restructuredtext.net/articles/configuration.html#linter."
          },
          "restructuredtext.languageServer.disabled": {
            "type": "boolean",
            "default": false,
            "description": "Flag to disable language server based IntelliSense if critical issues happen.",
            "scope": "resource",
            "deprecationMessage": "This setting is obsolete."
          },
          "restructuredtext.languageServer.maxNumberOfProblems": {
            "type": "number",
            "default": 100,
            "description": "Controls the maximum number of problems produced by the server.",
            "scope": "resource",
            "deprecationMessage": "This setting is obsolete."
          },
          "restructuredtext.languageServer.trace.server": {
            "type": "string",
            "enum": [
              "off",
              "messages",
              "verbose"
            ],
            "default": "off",
            "description": "Traces the communication between VSCode and the server.",
            "scope": "resource",
            "deprecationMessage": "This setting is obsolete."
          },
          "restructuredtext.editor.listEditing.list.indentationSize": {
            "type": "string",
            "enum": [
              "adaptive",
              "inherit"
            ],
            "markdownEnumDescriptions": [
              "%config.list.indentationSize.enumDescriptions.adaptive%",
              "%config.list.indentationSize.enumDescriptions.inherit%"
            ],
            "default": "adaptive",
            "markdownDescription": "%config.list.indentationSize.description%",
            "scope": "resource"
          },
          "restructuredtext.editor.listEditing.orderedList.autoRenumber": {
            "type": "boolean",
            "default": true,
            "description": "%config.orderedList.autoRenumber.description%"
          },
          "restructuredtext.editor.listEditing.orderedList.marker": {
            "type": "string",
            "default": "ordered",
            "description": "%config.orderedList.marker.description%",
            "enum": [
              "one",
              "ordered"
            ],
            "markdownEnumDescriptions": [
              "%config.orderedList.marker.enumDescriptions.one%",
              "%config.orderedList.marker.enumDescriptions.ordered%"
            ]
          },
          "restructuredtext.experimental": {
            "type": "boolean",
            "default": false,
            "description": "Flag to enable experimental features.",
            "scope": "resource"
          }
        }
      },
      {
        "title": "Server",
        "properties": {
          "esbonio.server.enabled": {
            "scope": "window",
            "type": "boolean",
            "default": true,
            "description": "Enable/Disable the language server"
          },
          "esbonio.server.enabledInPyFiles": {
            "scope": "window",
            "type": "boolean",
            "default": true,
            "description": "Enable/Disable the language server in Python files."
          },
          "esbonio.server.startupModule": {
            "scope": "window",
            "type": "string",
            "default": "esbonio",
            "description": "The module (or script) to use to launch the server."
          },
          "esbonio.server.entryPoint": {
            "scope": "window",
            "type": "string",
            "default": "esbonio",
            "description": "The entry point to use when launching the server.",
            "deprecationMessage": "This setting is obsolete. Please use esbonio.server.startupModule."
          },
          "esbonio.server.excludedModules": {
            "scope": "window",
            "type": "array",
            "default": [],
            "items": {
              "type": "string"
            },
            "description": "A list of modules to exclude from the server's configuration"
          },
          "esbonio.server.includedModules": {
            "scope": "window",
            "type": "array",
            "default": [],
            "items": {
              "type": "string"
            },
            "description": "A list of additional modules to include in the server's configuration"
          },
          "esbonio.server.logLevel": {
            "scope": "window",
            "type": "string",
            "default": "error",
            "enum": [
              "debug",
              "info",
              "error"
            ],
            "description": "The level of log message to show in the log"
          },
          "esbonio.server.logFilter": {
            "scope": "window",
            "type": "array",
            "default": [],
            "items": {
              "type": "string"
            },
            "description": "A list of logger names to limit output from"
          },
          "esbonio.server.pythonPath": {
            "scope": "window",
            "type": "string",
            "default": "",
            "description": "The path to the Python interpreter to use when running the Langague Server.\n\nBy default this extension will try to use the interpreter configured via the Python Extension. If you do not use the Python Extension or you wish to use a different environment, then this option can be used to override the default behavior."
          },
          "esbonio.server.hideSphinxOutput": {
            "scope": "window",
            "type": "boolean",
            "default": false,
            "description": "Hide Sphinx build output from the Language Server log."
          },
          "esbonio.server.sourceFolder": {
            "scope": "resource",
            "type": "string",
            "default": null,
            "description": "Local source folder of esbonio. Used for debugging local language server."
          },
          "esbonio.server.debugLaunch": {
            "scope": "resource",
            "type": "boolean",
            "default": false,
            "description": "Whether to debug from launch."
          },
          "esbonio.server.showOutputOnError": {
            "scope": "resource",
            "type": "boolean",
            "default": false,
            "description": "Whether to show output panel when errors occur."
          }
        }
      },
      {
        "title": "Sphinx",
        "properties": {
          "esbonio.sphinx.buildDir": {
            "scope": "window",
            "type": "string",
            "default": null,
            "description": "The directory in which to store Sphinx's build output.\n\nBy default the Language Server will store any build files in a storage area provided by VSCode, this option allows you to override this to be a directory of your choosing e.g. your local _build/ directory.",
            "markdownDescription": "The directory in which to store Sphinx's build output.\n\nBy default the Language Server will store any build files in a storage area provided by VSCode, this option allows you to override this to be a directory of your choosing e.g. your local `_build/` directory."
          },
          "esbonio.sphinx.confDir": {
            "scope": "window",
            "type": "string",
            "default": "",
            "description": "The Language Server should be able to automatically find the folder containing your project's 'conf.py' file. However this setting can be used to force the Language Server to use a particular directory if required."
          },
          "esbonio.sphinx.forceFullBuild": {
            "scope": "window",
            "type": "boolean",
            "default": true,
            "description": "By default the language server will force a full build of your documentation on startup to help improve the accuracy of some features like diagnostics. Disabling this option can help improve startup time for larger projects at the expense of certain features being less accurate."
          },
          "esbonio.sphinx.numJobs": {
            "scope": "window",
            "type": "integer",
            "default": 1,
            "markdownDescription": "The number of parallel jobs to use during a Sphinx build.\n\n- A value of `0` is equivalent to passing `-j auto` to a `sphinx-build` command.\n- A value of `1` will disable parallel processing."
          },
          "esbonio.sphinx.srcDir": {
            "scope": "window",
            "type": "string",
            "default": null,
            "description": "The directory containing your rst source files. By default the Language Server will assume this is the same as `esbonio.sphinx.confDir` but this option can override this if necessary.",
            "markdownDescription": "The directory containing your rst source files. By default the Language Server will assume this is the same as `#esbonio.sphinx.confDir#` but this option can override this if necessary."
          }
        }
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "yarn compile",
    "compile": "yarn build-ext && yarn build-preview",
    "build-ext": "npx tsc -p ./tsconfig.json",
    "build-preview": "webpack",
    "watch": "webpack && npx tsc -watch -p ./tsconfig.json",
    "pretest": "yarn compile",
    "test": "node ./out/test/runTest.js",
    "package:stable": "yarn install && vsce package",
    "package": "yarn install && vsce package --pre-release"
  }
}
